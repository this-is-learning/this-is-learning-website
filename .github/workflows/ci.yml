name: This is Learning CI

env:
  NODE_OPTIONS: --max-old-space-size=6144
  NX_BRANCH: ${{ github.event.number }}
  NX_MAX_PARALLEL: 2
  NX_RUN_GROUP: ${{ github.run_id }}
  node-version: 14.x
  package-name: this-is-learning-package
  pnpm-store-path: ~/.pnpm-store
  pnpm-version: 6.x

on:
  push:
    branches:
      - main
  pull_request: {}
  workflow_dispatch: {}

jobs:
  lint:
    name: Lint and check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      - name: Use PNPM ${{ env.pnpm-version }}
        uses: ./.github/actions/setup-pnpm
        with:
          pnpm-version: ${{ env.pnpm-version }}
          store-path: ${{ env.pnpm-store-path }}
      - name: Cache PNPM store
        uses: actions/cache@v2
        with:
          path: ${{ env.pnpm-store-path }}
          key: ${{ runner.os }}-node-${{ env.node-version }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.node-version }}-
            ${{ runner.os }}-
      - name: Install dependencies
        uses: ./.github/actions/pnpm-install

      - run: pnpm lint -- --max-parallel=$NX_MAX_PARALLEL

  test:
    name: Unit and integration test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      - name: Use PNPM ${{ env.pnpm-version }}
        uses: ./.github/actions/setup-pnpm
        with:
          pnpm-version: ${{ env.pnpm-version }}
          store-path: ${{ env.pnpm-store-path }}
      - name: Cache PNPM store
        uses: actions/cache@v2
        with:
          path: ${{ env.pnpm-store-path }}
          key: ${{ runner.os }}-node-${{ env.node-version }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.node-version }}-
            ${{ runner.os }}-
      - name: Install dependencies
        uses: ./.github/actions/pnpm-install
      - name: Run Angular Compatibility Compiler
        run: pnpm ngcc

      - run: pnpm test -- --max-parallel=$NX_MAX_PARALLEL

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      - name: Use PNPM ${{ env.pnpm-version }}
        uses: ./.github/actions/setup-pnpm
        with:
          pnpm-version: ${{ env.pnpm-version }}
          store-path: ${{ env.pnpm-store-path }}
      # - name: Cache PNPM store
      #   uses: actions/cache@v2
      #   with:
      #     path: ${{ env.pnpm-store-path }}
      #     key: ${{ runner.os }}-node-${{ env.node-version }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-${{ env.node-version }}-
      #       ${{ runner.os }}-
      - name: Install dependencies
        uses: ./.github/actions/pnpm-install
      - name: Run Angular Compatibility Compiler
        run: pnpm ngcc

      # - run: pnpm build -- --max-parallel=$NX_MAX_PARALLEL
      - run: pnpm build -- --max-parallel=$NX_MAX_PARALLEL --configuration=development
      - run: pnpm scully

      - name: Upload static website package
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.package-name }}
          path: dist/static/this-is-learning
          if-no-files-found: error

  deploy:
    name: Deploy
    # if: >
    #   github.ref == 'refs/heads/main' &&
    #   (github.event_name == 'workflow_dispatch' || github.event_name == 'push')
    needs: build
    runs-on: ubuntu-latest

    env:
      package-path: ./this-is-learning/

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.package-name }}
          path: ${{ env.package-path }}

      - name: Disable Jekyll on GitHub Pages
        run: touch ${{ env.package-path }}/.nojekyll

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.3
        with:
          branch: gh-pages
          folder: ${{ env.package-path }}

  e2e:
    name: End-to-end test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      - name: Variable-Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn cache directory
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          # Yes, hash the PNPM lockfile
          key: ${{ runner.os }}-node-${{ env.node-version }}-yarn-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.node-version }}-
            ${{ runner.os }}-
      - name: Install dependencies
        # Use Yarn because of Cypress issues with PNPM
        run: yarn install
      - name: Run Angular Compatibility Compiler
        run: yarn ngcc

      - run: yarn e2e --configuration=ci --max-parallel=$NX_MAX_PARALLEL
